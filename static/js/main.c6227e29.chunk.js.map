{"version":3,"sources":["config.js","components/Search/Search.js","components/BooksList/SingleBook.js","components/BooksList/BooksList.js","App.js","serviceWorker.js","index.js","static/fallbackImage.jpg"],"names":["GOOGLE_BOOKS_API_KEY","Search","_ref","handleInput","handleSubmit","react_default","a","createElement","className","onSubmit","htmlFor","id","type","onChange","autoFocus","placeholder","SingleBook","image","title","authors","publisher","link","src","fallbackImg","alt","length","join","href","target","rel","defaultProps","BooksList","data","map","book","BooksList_SingleBook","key","imageFallback","previewLink","App","state","searchTerm","books","startIndex","error","loading","event","_this","setState","value","checkInput","input","trim","getBooks","fetch","concat","then","response","json","errors","Error","message","split","Object","entries","constructor","Promise","all","items","selfLink","res","volumeInfo","imageLinks","small","thumbnail","catch","err","preventDefault","_this$state","maxResults","handleNextPage","prevState","_this$state2","handlePreviousPage","_this$state3","bookList","this","Fragment","components_BooksList_BooksList","onClick","components_Search_Search","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4LAAaA,SAAuB,2CCwBrBC,EArBA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUL,GACdC,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eACfL,EAAAC,EAAAC,cAAA,SACEI,GAAG,aACHC,KAAK,OACLC,SAAUV,EACVW,WAAS,EACTC,YAAY,iBAEdV,EAAAC,EAAAC,cAAA,UAAQK,KAAK,UAAb,6BCTAI,EAAa,SAAAd,GAAgD,IAA7Ce,EAA6Cf,EAA7Ce,MAAOC,EAAsChB,EAAtCgB,MAAOC,EAA+BjB,EAA/BiB,QAASC,EAAsBlB,EAAtBkB,UAAWC,EAAWnB,EAAXmB,KACtD,OACEhB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKe,IAAKL,GAASM,IAAaC,IAAKN,KAEvCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCAAkCU,GAC/CC,EAAQM,QAAU,EACjBpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAd,WACWW,EAAQ,IAGnBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAd,YACYW,EAAQO,KAAK,OAG3BrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sCAAd,iBACiBY,GAEjBf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KACEC,UAAU,OAEVmB,KAAMN,EACNO,OAAO,SACPC,IAAI,uBALN,iBAeVb,EAAWc,aAAe,CACxBX,QAAS,CAAC,kBACVD,MAAO,iBACPE,UAAW,sBAWEJ,QCxBAe,EA1BG,SAAA7B,GAAc,IAAX8B,EAAW9B,EAAX8B,KACnB,OAAOA,EACL3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACXwB,EAAKC,IAAI,SAAAC,GAAI,OACZ7B,EAAAC,EAAAC,cAAC4B,EAAD,CACEC,IAAKF,EAAKvB,GACVA,GAAIuB,EAAKvB,GACTM,MAAOiB,EAAKjB,OAASiB,EAAKG,cAC1BnB,MAAOgB,EAAKhB,MACZC,QAASe,EAAKf,QACdC,UAAWc,EAAKd,UAChBC,KAAMa,EAAKI,kBAMnBjC,EAAAC,EAAAC,cAAA,8BC8JWgC,6MA7KbC,MAAQ,CACNC,WAAY,GACZC,MAAO,KACPC,WAAY,EACZC,MAAO,KACPC,SAAS,KAGX1C,YAAc,SAAA2C,GACZC,EAAKC,SAAS,CAAEP,WAAYK,EAAMlB,OAAOqB,WAG3CC,WAAa,SAAAC,GACX,OAAIA,EAAMC,OAAO3B,OAAS,GACxBsB,EAAKC,SAAS,CAAEJ,MAAO,0BAChB,IAETG,EAAKC,SAAS,CAAEJ,MAAO,QAChB,MAGTS,SAAW,SAACZ,EAAYE,GAGtB,OAFAI,EAAKC,SAAS,CAAEH,SAAS,IAElBS,MAAK,iDAAAC,OACuCd,EADvC,gBAAAc,OACgEZ,EADhE,8CAAAY,OACuHvD,IAEhIwD,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAxB,GACJ,GAAIA,EAAKY,OAASZ,EAAKY,MAAMe,OAAOlC,OAAS,EAC3C,MAAMmC,MAAM5B,EAAKY,MAAMiB,QAAQC,MAAM,MAAM,IAG7C,GAAoC,IAAhCC,OAAOC,QAAQhC,GAAMP,QAAgBO,EAAKiC,cAAgBF,OAC5D,MAAMH,MAAM,qBAGd,OAAOM,QAAQC,IACbnC,EAAKoC,MAAMnC,IAAI,SAAAC,GAAI,OACjBoB,MAAK,GAAAC,OAEDrB,EAAKmC,SAFJ,+FAAAd,OAG2FvD,SAKrGwD,KAAK,SAAAc,GAAG,OAAIJ,QAAQC,IAAIG,EAAIrC,IAAI,SAAAC,GAAI,OAAIA,EAAKwB,YAC7CF,KAAK,SAAAd,GACJ,GAAIA,EAAMjB,OAAS,EAAG,MAAMmC,MAAM,mBAGlC,OADAb,EAAKC,SAAS,CAAEH,SAAS,IAClBH,EAAMT,IAAI,SAAAC,GAAI,MAAK,CACxBvB,GAAIuB,EAAKvB,GACTO,MAAOgB,EAAKqC,WAAWrD,MACvBC,QAASe,EAAKqC,WAAWpD,QACzBC,UAAWc,EAAKqC,WAAWnD,UAC3BkB,YAAaJ,EAAKqC,WAAWjC,YAC7BrB,MAAOiB,EAAKqC,WAAWC,YAActC,EAAKqC,WAAWC,WAAWC,MAChEpC,cACEH,EAAKqC,WAAWC,YAActC,EAAKqC,WAAWC,WAAWE,eAG9DC,MAAM,SAAAC,GACL7B,EAAKC,SAAS,CACZH,SAAS,EACTD,MAAOgC,EAAIf,SAAW,+CAK9BzD,aAAe,SAAA0C,GACbA,EAAM+B,iBADgB,IAAAC,EAEyB/B,EAAKP,MAA5CC,EAFcqC,EAEdrC,WAAYE,EAFEmC,EAEFnC,WAAYoC,EAFVD,EAEUC,WAC5BhC,EAAKG,WAAWT,IACpBM,EAAKM,SAASZ,EAAYE,EAAYoC,GAAYvB,KAAK,SAAAd,GAAK,OAC1DK,EAAKC,SAAS,CAAEN,eAIpBsC,eAAiB,WACXjC,EAAKG,WAAWH,EAAKP,MAAMC,aAC/BM,EAAKC,SACH,SAAAiC,GAAS,MAAK,CACZtC,WAAYsC,EAAUtC,WAAa,KAErC,WAAM,IAAAuC,EAC2CnC,EAAKP,MAA5CC,EADJyC,EACIzC,WAAYE,EADhBuC,EACgBvC,WAAYoC,EAD5BG,EAC4BH,WAEhChC,EAAKM,SAASZ,EAAYE,EAAYoC,GAAYvB,KAAK,SAAAd,GAAK,OAC1DK,EAAKC,SAAS,CAAEN,iBAMxByC,mBAAqB,WACfpC,EAAKG,WAAWH,EAAKP,MAAMC,aAC3BM,EAAKP,MAAMG,WAAa,GAE5BI,EAAKC,SACH,SAAAiC,GAAS,MAAK,CACZtC,WAAYsC,EAAUtC,WAAa,KAErC,WAAM,IAAAyC,EAC2CrC,EAAKP,MAA5CC,EADJ2C,EACI3C,WAAYE,EADhByC,EACgBzC,WAAYoC,EAD5BK,EAC4BL,WAEhChC,EAAKM,SAASZ,EAAYE,EAAYoC,GAAYvB,KAAK,SAAAd,GAAK,OAC1DK,EAAKC,SAAS,CAAEN,uFAOtB,IAAM2C,EACJhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZ8E,KAAK9C,MAAMK,QACVxC,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiF,SAAA,KACElF,EAAAC,EAAAC,cAACiF,EAAD,CAAWxD,KAAMsD,KAAK9C,MAAME,QAC5BrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZ8E,KAAK9C,MAAMG,WAAa,EACvBtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOiF,QAASH,KAAKH,oBAArC,QAGE,KACHG,KAAK9C,MAAME,MACVrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiF,SAAA,KACElF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAAhB,QACQ8E,KAAK9C,MAAMG,WAAa,GAAK,GAErCtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOiF,QAASH,KAAKN,gBAArC,SAIA,QAORpC,EAAQvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8E,KAAK9C,MAAMI,OAEjD,OACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,eACAH,EAAAC,EAAAC,cAACmF,EAAD,CACEvF,YAAamF,KAAKnF,YAClBC,aAAckF,KAAKlF,gBAGtBkF,KAAK9C,MAAMI,MAAQA,EAAQyC,EAC5BhF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,KACEC,UAAU,OACVmB,KAAK,qCACLC,OAAO,SACPC,IAAI,uBAJN,mBA/JM8D,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhD,KAAK,SAAAiD,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.c6227e29.chunk.js","sourcesContent":["export const GOOGLE_BOOKS_API_KEY = 'AIzaSyAbOllf8T7xq9sAZiH0aACPJvkd17bbvwA';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ handleInput, handleSubmit }) => (\n  <div className=\"search\">\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"searchTerm\" />\n      <input\n        id=\"searchTerm\"\n        type=\"text\"\n        onChange={handleInput}\n        autoFocus\n        placeholder=\"Harry Potter\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  </div>\n);\n\nSearch.propTypes = {\n  handleInput: PropTypes.func,\n  handleSubmit: PropTypes.func\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport fallbackImg from '../../static/fallbackImage.jpg';\n\nconst SingleBook = ({ image, title, authors, publisher, link }) => {\n  return (\n    <li className=\"books__books-grid__item\">\n      <div className=\"books__books-grid__item--image\">\n        <img src={image || fallbackImg} alt={title} />\n      </div>\n      <div className=\"books__books-grid__item--bookinfo\">\n        <h3 className=\"books__books-grid__item--title\">{title}</h3>\n        {authors.length <= 1 ? (\n          <h4 className=\"books__books-grid__item--author\">\n            Author: {authors[0]}\n          </h4>\n        ) : (\n          <h4 className=\"books__books-grid__item--author\">\n            Authors: {authors.join(', ')}\n          </h4>\n        )}\n        <h4 className=\"books__books-grid__item--publisher\">\n          Published by: {publisher}\n        </h4>\n        <div>\n          <a\n            className=\"link\"\n            // className=\"more-info\"\n            href={link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            More info\n          </a>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nSingleBook.defaultProps = {\n  authors: ['Not specified.'],\n  title: 'Missing title.',\n  publisher: 'Missing publisher.'\n};\n\nSingleBook.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  authors: PropTypes.array.isRequired,\n  publisher: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired\n};\n\nexport default SingleBook;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SingleBook from './SingleBook';\n\nconst BooksList = ({ data }) => {\n  return data ? (\n    <div>\n      <ul className=\"books__books-grid\">\n        {data.map(book => (\n          <SingleBook\n            key={book.id}\n            id={book.id}\n            image={book.image || book.imageFallback}\n            title={book.title}\n            authors={book.authors}\n            publisher={book.publisher}\n            link={book.previewLink}\n          />\n        ))}\n      </ul>\n    </div>\n  ) : (\n    <div>Try to search.</div>\n  );\n};\n\nBooksList.propTypes = {\n  data: PropTypes.array\n};\n\nexport default BooksList;\n","import React, { Component } from 'react';\n\nimport './index.css';\nimport { GOOGLE_BOOKS_API_KEY } from './config';\nimport Search from './components/Search/Search';\nimport BooksList from './components/BooksList/BooksList';\n\nclass App extends Component {\n  state = {\n    searchTerm: '',\n    books: null,\n    startIndex: 0,\n    error: null,\n    loading: false\n  };\n\n  handleInput = event => {\n    this.setState({ searchTerm: event.target.value });\n  };\n\n  checkInput = input => {\n    if (input.trim().length < 1) {\n      this.setState({ error: 'Your input is empty.' });\n      return true;\n    }\n    this.setState({ error: null });\n    return false;\n  };\n\n  getBooks = (searchTerm, startIndex) => {\n    this.setState({ loading: true });\n\n    return fetch(\n      `https://www.googleapis.com/books/v1/volumes?q=${searchTerm}&startIndex=${startIndex}&maxResults=10&fields=items(selfLink)&key=${GOOGLE_BOOKS_API_KEY}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        if (data.error && data.error.errors.length > 0) {\n          throw Error(data.error.message.split('. ')[0]);\n        }\n\n        if (Object.entries(data).length === 0 && data.constructor === Object) {\n          throw Error('No matches found.');\n        }\n\n        return Promise.all(\n          data.items.map(book =>\n            fetch(\n              `${\n                book.selfLink\n              }?fields=id,volumeInfo(title,authors,publisher,previewLink,imageLinks(thumbnail,small))&key=${GOOGLE_BOOKS_API_KEY}`\n            )\n          )\n        );\n      })\n      .then(res => Promise.all(res.map(book => book.json())))\n      .then(books => {\n        if (books.length < 1) throw Error('No books found.');\n\n        this.setState({ loading: false });\n        return books.map(book => ({\n          id: book.id,\n          title: book.volumeInfo.title,\n          authors: book.volumeInfo.authors,\n          publisher: book.volumeInfo.publisher,\n          previewLink: book.volumeInfo.previewLink,\n          image: book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.small,\n          imageFallback:\n            book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail\n        }));\n      })\n      .catch(err => {\n        this.setState({\n          loading: false,\n          error: err.message || 'Sorry we cannot process your request.'\n        });\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm, startIndex, maxResults } = this.state;\n    if (this.checkInput(searchTerm)) return;\n    this.getBooks(searchTerm, startIndex, maxResults).then(books =>\n      this.setState({ books })\n    );\n  };\n\n  handleNextPage = () => {\n    if (this.checkInput(this.state.searchTerm)) return;\n    this.setState(\n      prevState => ({\n        startIndex: prevState.startIndex + 10\n      }),\n      () => {\n        const { searchTerm, startIndex, maxResults } = this.state;\n\n        this.getBooks(searchTerm, startIndex, maxResults).then(books =>\n          this.setState({ books })\n        );\n      }\n    );\n  };\n\n  handlePreviousPage = () => {\n    if (this.checkInput(this.state.searchTerm)) return;\n    if (this.state.startIndex < 1) return;\n\n    this.setState(\n      prevState => ({\n        startIndex: prevState.startIndex - 10\n      }),\n      () => {\n        const { searchTerm, startIndex, maxResults } = this.state;\n\n        this.getBooks(searchTerm, startIndex, maxResults).then(books =>\n          this.setState({ books })\n        );\n      }\n    );\n  };\n\n  render() {\n    const bookList = (\n      <div className=\"books\">\n        {this.state.loading ? (\n          <div>Loading...</div>\n        ) : (\n          <>\n            <BooksList data={this.state.books} />\n            <div className=\"books__pagination\">\n              {this.state.startIndex > 1 ? (\n                <span className=\"link\" onClick={this.handlePreviousPage}>\n                  Back\n                </span>\n              ) : null}\n              {this.state.books ? (\n                <>\n                  <span className=\"books__pagination--page\">\n                    Page {this.state.startIndex / 10 + 1}\n                  </span>\n                  <span className=\"link\" onClick={this.handleNextPage}>\n                    Next\n                  </span>\n                </>\n              ) : null}\n            </div>\n          </>\n        )}\n      </div>\n    );\n\n    const error = <div className=\"error\">{this.state.error}</div>;\n\n    return (\n      <div>\n        <main className=\"main\">\n          <div>\n            <h1 className=\"logo\">Book Finder</h1>\n            <Search\n              handleInput={this.handleInput}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n          {this.state.error ? error : bookList}\n          <footer className=\"footer\">\n            <a\n              className=\"link\"\n              href=\"http://github.com/g1st/book-finder\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              @g1st\n            </a>\n          </footer>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/fallbackImage.caf9523f.jpg\";"],"sourceRoot":""}